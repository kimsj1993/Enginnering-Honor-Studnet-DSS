# Generated by Django 2.1.7 on 2019-02-17 05:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=45)),
                ('letails', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('uin', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('middle_name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('number', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(default=None, max_length=45)),
                ('credits', models.PositiveIntegerField(default=None)),
                ('min_credits', models.PositiveIntegerField(default=None)),
                ('max_credits', models.PositiveIntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('activities_per_semester', models.PositiveIntegerField()),
                ('advising_per_semester', models.FloatField()),
                ('activities', models.ManyToManyField(to='eh_app.Activity')),
                ('advisors', models.ManyToManyField(to='eh_app.Advisor')),
                ('required_activities', models.ManyToManyField(default=None, related_name='required_activities', to='eh_app.Activity')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('description', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(default=None, max_length=10)),
                ('details', models.TextField(default=None, max_length=255)),
                ('advisor', models.ForeignKey(default=None, on_delete=None, to='eh_app.Advisor')),
                ('department', models.ForeignKey(on_delete=None, to='eh_app.Department')),
                ('requirement_satisfied', models.ForeignKey(default=None, on_delete=None, to='eh_app.Requirement')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('crn', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('number', models.PositiveIntegerField()),
                ('level', models.CharField(choices=[('L', 'Lower'), ('U', 'Upper')], default=None, max_length=1)),
                ('campus', models.ForeignKey(default=None, on_delete=None, to='eh_app.Campus')),
                ('course', models.ForeignKey(default=None, on_delete=None, to='eh_app.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=16)),
                ('academic_year', models.CharField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('uin', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('middle_name', models.CharField(max_length=45)),
                ('email', models.EmailField(max_length=45)),
                ('gpa', models.FloatField()),
                ('times_on_probation', models.PositiveIntegerField(default=0)),
                ('times_dismissed', models.PositiveIntegerField(default=0)),
                ('majors', models.CharField(max_length=45)),
                ('graduated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAdvisorMeeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=None)),
                ('details', models.TextField(default=None, max_length=255)),
                ('advisor', models.ForeignKey(default=None, on_delete=None, to='eh_app.Advisor')),
                ('requirement_satisfied', models.ForeignKey(on_delete=None, to='eh_app.Requirement')),
                ('semester', models.ForeignKey(on_delete=None, to='eh_app.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSectionEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(default=None, max_length=2)),
                ('grading_mode', models.CharField(default=None, max_length=10)),
                ('repeat', models.CharField(default=None, max_length=10)),
                ('section', models.ForeignKey(on_delete=None, to='eh_app.Section')),
                ('semester', models.ForeignKey(on_delete=None, to='eh_app.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTrackEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.ForeignKey(default=None, on_delete=None, to='eh_app.Campus')),
                ('semester_enrolled', models.ForeignKey(default=None, on_delete=None, to='eh_app.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('uin', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('middle_name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='TrackRequirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('per_sem', models.CharField(default=None, max_length=3)),
                ('per_year', models.CharField(default=None, max_length=3)),
                ('overall', models.CharField(default=None, max_length=3)),
                ('description', models.TextField(default=None, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Exception',
            fields=[
                ('type_of_leave', models.CharField(max_length=45, unique=True)),
                ('leave_duration', models.CharField(default=None, max_length=10)),
                ('student', models.OneToOneField(on_delete=None, primary_key=True, serialize=False, to='eh_app.Student')),
                ('semester', models.ForeignKey(on_delete=None, to='eh_app.Semester')),
            ],
        ),
        migrations.AddField(
            model_name='track',
            name='requirements',
            field=models.ForeignKey(on_delete=None, to='eh_app.TrackRequirements'),
        ),
        migrations.AddField(
            model_name='track',
            name='semester_started',
            field=models.ForeignKey(on_delete=None, to='eh_app.Semester'),
        ),
        migrations.AddField(
            model_name='studenttrackenrollment',
            name='student',
            field=models.ForeignKey(on_delete=None, to='eh_app.Student'),
        ),
        migrations.AddField(
            model_name='studenttrackenrollment',
            name='track',
            field=models.ForeignKey(on_delete=None, to='eh_app.Track'),
        ),
        migrations.AddField(
            model_name='studentsectionenrollment',
            name='student',
            field=models.ForeignKey(on_delete=None, to='eh_app.Student'),
        ),
        migrations.AddField(
            model_name='studentadvisormeeting',
            name='student',
            field=models.ForeignKey(on_delete=None, to='eh_app.Student'),
        ),
        migrations.AddField(
            model_name='student',
            name='activities_attended',
            field=models.ManyToManyField(to='eh_app.Activity'),
        ),
        migrations.AddField(
            model_name='student',
            name='departments',
            field=models.ForeignKey(on_delete=None, to='eh_app.Department'),
        ),
        migrations.AddField(
            model_name='student',
            name='graduation_semester',
            field=models.ForeignKey(on_delete=None, related_name='graduation_semester', to='eh_app.Semester'),
        ),
        migrations.AddField(
            model_name='student',
            name='start_semester',
            field=models.ForeignKey(on_delete=None, to='eh_app.Semester'),
        ),
        migrations.AddField(
            model_name='section',
            name='semester',
            field=models.ForeignKey(on_delete=None, to='eh_app.Semester'),
        ),
        migrations.AddField(
            model_name='section',
            name='teacher',
            field=models.ForeignKey(default=None, on_delete=None, to='eh_app.Teacher'),
        ),
        migrations.AddField(
            model_name='department',
            name='track',
            field=models.ForeignKey(on_delete=None, to='eh_app.Track'),
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=None, to='eh_app.Department'),
        ),
        migrations.AddField(
            model_name='advisor',
            name='track',
            field=models.ForeignKey(on_delete=None, to='eh_app.Track'),
        ),
        migrations.AddField(
            model_name='activity',
            name='requirement_satisfied',
            field=models.ForeignKey(on_delete=None, to='eh_app.Requirement'),
        ),
        migrations.AddField(
            model_name='activity',
            name='semester',
            field=models.ForeignKey(on_delete=None, to='eh_app.Semester'),
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('crn', 'semester')},
        ),
        migrations.AlterUniqueTogether(
            name='research',
            unique_together={('requirement_satisfied', 'department')},
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('number', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='activity',
            unique_together={('id', 'requirement_satisfied', 'semester')},
        ),
        migrations.AlterUniqueTogether(
            name='exception',
            unique_together={('semester', 'student')},
        ),
    ]
